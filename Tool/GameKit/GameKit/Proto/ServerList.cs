// Copyright (c) 2015 fjz13. All rights reserved.
// Use of this source code is governed by a MIT-style
// license that can be found in the LICENSE file.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: ServerList.proto
namespace Medusa.CoreProto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ServerUsageItem")]
  public partial class ServerUsageItem : global::ProtoBuf.IExtensible
  {
    public ServerUsageItem() {}
    
    private Medusa.CoreProto.ServerUsageType _Usage;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"Usage", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public Medusa.CoreProto.ServerUsageType Usage
    {
      get { return _Usage; }
      set { _Usage = value; }
    }
    private uint _ServerId;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"ServerId", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint ServerId
    {
      get { return _ServerId; }
      set { _ServerId = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ServerListItem")]
  public partial class ServerListItem : global::ProtoBuf.IExtensible
  {
    public ServerListItem() {}
    
    private uint _Id;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"Id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint Id
    {
      get { return _Id; }
      set { _Id = value; }
    }
    private readonly global::System.Collections.Generic.List<Medusa.CoreProto.ServerUsageItem> _ServerUsages = new global::System.Collections.Generic.List<Medusa.CoreProto.ServerUsageItem>();
    [global::ProtoBuf.ProtoMember(2, Name=@"ServerUsages", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Medusa.CoreProto.ServerUsageItem> ServerUsages
    {
      get { return _ServerUsages; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ServerList")]
  public partial class ServerList : global::ProtoBuf.IExtensible
  {
    public ServerList() {}
    
    private readonly global::System.Collections.Generic.List<Medusa.CoreProto.ServerListItem> _Items = new global::System.Collections.Generic.List<Medusa.CoreProto.ServerListItem>();
    [global::ProtoBuf.ProtoMember(1, Name=@"Items", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Medusa.CoreProto.ServerListItem> Items
    {
      get { return _Items; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
    [global::ProtoBuf.ProtoContract(Name=@"ServerUsageType")]
    public enum ServerUsageType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"LoginServer", Value=1)]
      LoginServer = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"GameServer", Value=2)]
      GameServer = 2
    }
  
}