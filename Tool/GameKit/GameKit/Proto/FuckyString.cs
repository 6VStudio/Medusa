// Copyright (c) 2015 fjz13. All rights reserved.
// Use of this source code is governed by a MIT-style
// license that can be found in the LICENSE file.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: FuckyString.proto
namespace Medusa.CoreProto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"FuckyStringNode")]
  public partial class FuckyStringNode : global::ProtoBuf.IExtensible
  {
    public FuckyStringNode() {}
    
    private int _charVal;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"charVal", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int charVal
    {
      get { return _charVal; }
      set { _charVal = value; }
    }
    private bool _isFucky;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"isFucky", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool isFucky
    {
      get { return _isFucky; }
      set { _isFucky = value; }
    }
    private readonly global::System.Collections.Generic.List<Medusa.CoreProto.FuckyStringNode> _childs = new global::System.Collections.Generic.List<Medusa.CoreProto.FuckyStringNode>();
    [global::ProtoBuf.ProtoMember(3, Name=@"childs", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Medusa.CoreProto.FuckyStringNode> childs
    {
      get { return _childs; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"FuckyString")]
  public partial class FuckyString : global::ProtoBuf.IExtensible
  {
    public FuckyString() {}
    
    private readonly global::System.Collections.Generic.List<Medusa.CoreProto.FuckyStringNode> _rootNodes = new global::System.Collections.Generic.List<Medusa.CoreProto.FuckyStringNode>();
    [global::ProtoBuf.ProtoMember(1, Name=@"rootNodes", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Medusa.CoreProto.FuckyStringNode> rootNodes
    {
      get { return _rootNodes; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}