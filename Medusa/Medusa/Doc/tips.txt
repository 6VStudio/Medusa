1.函数转发几乎不消耗性能,所以

渲染引擎:
1.生成渲染优先级队列(不能每帧动态的生成,而应该在改变的时候才重新生成),利用Node的Add,Remove,Delete,Reorder,Visible,HasMesh操作改变队列,该步骤的输出是一个新的队列
2.裁剪(视域裁剪和遮挡裁剪,在摄像头改变的时候,区分静态动态物体,利用2d的优化),对新的队列进行裁剪之后输出另一个队列
3.渲染树(在原有基础上应用变化),输入是Swaped的两个渲染队列,通过比较该两个队列的元素不同来对渲染树进行调整
4.重构渲染树后,需要删除可能形成空的Batch,之后可以尝试合并并列的两个batch,保持时刻最优

更新引擎
搜集相关的节点到一个列表里去,直接遍历该列表可以大大的提高性能。
